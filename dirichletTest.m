classdef dirichletTest < matlab.unittest.TestCase
    % GEOMETRYTEST
    % Test class for testing if program can handle different kinds of input
    % meshes
    
    properties (TestParameter)
        meshes = struct(...
            'smallCube1', [1 1 -1;1 -1 -1;1 1 1;1 -1 1;-1 1 -1;-1 -1 -1;-1 1 1;-1 -1 1], ...
            'smallCube2', [0 0 0;0 0 1;0 1 0;0 1 1;1 0 0;1 0 1;1 1 0;1 1 1], ...
            'randomCube1', randi(10, 8, 3),...
            'randomCube2', randi(10, 8, 3),...
            'randomCube3', randi(10, 8, 3),...
            'randomCube4', randi(10, 8, 3)...
            );
        files = struct(...
            'obj', strcat(pwd,'\meshes\example_mesh_3D.obj'), ...
            'txt', strcat(pwd,'\meshes\cube_nodes.txt'));
        files_dirichlet = struct(...
            'obj', strcat(pwd,'\meshes\example_mesh_3D_dirichlet.obj'), ...
            'txt', strcat(pwd,'\meshes\cube_nodes_dirichlet.txt'));
        files_result = struct(...
            'obj', [1 2 3 4]', ...
            'txt', [1 2 3 4]');
        files_gibberish = struct(...
            'gibberish', 'huehue', ...
            'gibberish2', 'blaoeuchaoeurcoha', ...
            'gibberishDots', 'oeuouou.hue', ...
            'gibberishMultipleDots', 'orocehuo.hue.hue.hue.hue', ...
            'gibberishSlashes', 'aoeuoeuo\oeuoeu/ooeuo', ...
            'gibberishDotsSlashes', 'oecuhaoeu/oeuoceuh/oeuch.hue');
    end
    
    methods (TestMethodSetup)
        function MethodSetup(testCase)
            orig = rng;
            testCase.addTeardown(@rng, orig)
            rng(42) % Answer to the Ultimate Question of Life, the Universe, and Everything.
        end
    end
    
    methods (Test)
        function testFalseFilenames(testCase, files_gibberish)
            % just give some random variable to the readDirichletNodes
            % function so it will run the test
            testCase.verifyError(@() readDirichletNodes(files_gibberish,2), ...
                'MATLAB:FileIO:InvalidFid', ...
                "Invalid filenames should raise an error!");
        end
    end
    
    methods (Test, ParameterCombination='sequential')
        function testLegitFilenames(testCase, files, files_dirichlet, files_result)
            actSolution = readMesh(files);
            actSolution = readDirichletNodes(files_dirichlet, actSolution);
            testCase.verifyEqual(actSolution.Points, files_result, ... 
                "Input of example file failed!");
        end
    end
end